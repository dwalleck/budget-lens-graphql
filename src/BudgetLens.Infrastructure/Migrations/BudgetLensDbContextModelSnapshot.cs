// <auto-generated />
using System;
using BudgetLens.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetLens.Infrastructure.Migrations
{
    [DbContext(typeof(BudgetLensDbContext))]
    partial class BudgetLensDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgetLens.Infrastructure.EventStore.StoredEvent", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("event_id");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid")
                        .HasColumnName("aggregate_id");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("aggregate_type");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("event_data");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("event_type");

                    b.Property<string>("Metadata")
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_at");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("EventId")
                        .HasName("pk_events");

                    b.HasIndex("AggregateId")
                        .HasDatabaseName("idx_events_aggregate_id");

                    b.HasIndex("AggregateType")
                        .HasDatabaseName("idx_events_aggregate_type");

                    b.HasIndex("EventType")
                        .HasDatabaseName("idx_events_event_type");

                    b.HasIndex("OccurredAt")
                        .HasDatabaseName("idx_events_occurred_at");

                    b.HasIndex("AggregateId", "Version")
                        .IsUnique()
                        .HasDatabaseName("idx_events_aggregate_version");

                    b.ToTable("events", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
